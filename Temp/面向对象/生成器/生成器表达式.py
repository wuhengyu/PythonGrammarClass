# 二者的区别很明显：
# 一个直接返回了表达式的结果列表， 而另一个是一个对象，该对象包含了对表达式结果的计算引用， 通过循环可以直接输出
# 生成器表达式是列表推倒式的生成器版本，看起来像列表推导式，但是它返回的是一个生成器对象而不是列表对象。
# 当表达式的结果数量较少的时候， 使用列表生成式还好， 一旦数量级过大， 那么列表生成式就会占用很大的内存，
# 而生成器并不是立即把结果写入内存， 而是保存的一种计算方式， 通过不断的获取， 可以获取到相应的位置的值,所以占用的内存仅仅是对计算对象的保存

# 列表表达式
lis = [x * x for x in range(10)]
print(lis)

# 生成器表达式
lis1 = (x * x for x in range(10))
print(lis1)
g = (x * x for x in range(0, 10))
for n in lis1:
    print(n, end=" ")
